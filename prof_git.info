This is prof_git.info, produced by makeinfo version 6.5 from
prof_git.texi.

Outline of _Professional Git_ © 2017 by John Riley & Sons, Inc

   Written by Brent Laster

   Outlined by WLHarvey4
INFO-DIR-SECTION Version Control
START-INFO-DIR-ENTRY
* Professional Git.     More advanced Git.
END-INFO-DIR-ENTRY


File: prof_git.info,  Node: Top,  Next: Introduction,  Up: (dir)

Outline of _Professional Git_
*****************************

Outline of _Professional Git_ © 2017 by John Riley & Sons, Inc

   Written by Brent Laster

   Outlined by WLHarvey4

* Menu:

* Introduction::
* What Is Git::
* Key Concepts::
* The Git Promotion Model::
* Configuration and Setup::
* Getting Productive::
* Tracking Changes::
* Working With Changes Over Time and Using Tags::
* Working With Local Branches::
* Merging Content::
* Supporting Files in Git::
* Doing More With Git::
* Understanding Remotes---Branches andc Operations::
* Understanding Remotes---Workflows for Changes::
* Working With Trees and Modules in Git::
* Extending Git Functionality With Git Hooks::
* Index::

— The Detailed Node Listing —

Introduction

* How This Book is Unique::
* Target Audience::
* Structure and Content::
* Reader Value::



File: prof_git.info,  Node: Introduction,  Next: What Is Git,  Prev: Top,  Up: Top

Introduction
************

_Professional Git_ is intended to help you understand and use Git to get
your job done.  In the process, it will also make Git part of your
professional comfort zone.

   This section will explain how this book is unique from other books
about Git, the intended audience, the book’s overall structure and
content, and some of the value it offers you.

* Menu:

* How This Book is Unique::
* Target Audience::
* Structure and Content::
* Reader Value::


File: prof_git.info,  Node: How This Book is Unique,  Next: Target Audience,  Up: Introduction

How This Book is Unique
=======================

Git in terms of Known Concepts
==============================

Most books are aimed at providing the technical usage as their major and
singular goal.  This book provides that, but it will aso provide you
with an understanding of Git in terms of _concepts_ that you probably
already know.

Connected Labs for Actual Examples
==================================

Most books do not provide practical ways to integrate the concepts they
describe.  Learning is most effective when you have _actual examples_ to
work through so you can internalize the concepts and gain proficiency.
This book provides *Connected Labs* that you can work through to absorb
what you’ve read.

Illustrations for Key Ideas and Workflows
=========================================

This book also provides clear _illustrations_ to help you visualize key
ideas and workflows.  These sections provide additional explanations of
how to use some lesser-known features of Git as well as how to go beyond
the standard Git features to gain extra valua.

Git Model and Workflow
======================

To be most effective, you need to comprehend the Git _model_ and
_workflow_.  You should also know what to watch out for as you make the
transition and why it’s important to consider not only the commands and
workflow, but also the structure and scope of its underlying
repositories.


File: prof_git.info,  Node: Target Audience,  Next: Structure and Content,  Prev: How This Book is Unique,  Up: Introduction

Target Audience
===============

There is only one assumption in this book: that the reader has
experience with at least one source management system.  It doesn’t
matter which one: CVS, Subversion, Mercury—any will do.  The reader is
assumed to have a basic awareness of what a source management system
does as well as fundamental concepts such as checking in and checking
out code and branching.  Even if you have significant experience with
Git or another system, the reader will find something of benefit here.

   Git requires a mind shift.  In fact, requires a series of mind
shifts.  However, each shift is easy to understand once you can relate
it to something you already know.  Understanding each of these shifts
will, in turn, allow you to be more productive and to harness the
features of this powerful tool—that’s what this book is about.


File: prof_git.info,  Node: Structure and Content,  Next: Reader Value,  Prev: Target Audience,  Up: Introduction

Structure and Content
=====================

This book is organized as a series of chapters that present Git from the
ground up, teaching what is needed to know and build on to become
proficient before adding new concepts.

Part One: Foundational Git
==========================

The first three chapters cover the foundational concepts of Git: how it
is different from other systems, the ecosystem that’s been built around
it, its advantages and challenges, and the model that allows you to
understand its workflow and manage content effectively with it.  This
section will provide you with a basic understanding of the ideas, goals
and essential terminology of Git.

Part Two: Usage and Features of Git
===================================

The remaining chapters of the book cover the usage and features of Git,
from performing basic operations to create repositories and commit
changes into them, to creating branches, doing merges, and working with
content in public repositories.


File: prof_git.info,  Node: Reader Value,  Prev: Structure and Content,  Up: Introduction

Reader Value
============

You will find:

   • examples and guidance on the commands and workflows needed to be
     productive with Git;
   • ways to relate concepts to what you already know and understand;
   • many illustrations to help you understand concepts visually;
   • a feature that allows you to get hands-on experience with Git, via
     *Connected Labs*, insterspersed throught the chapters.  These labs
     are designed to reinforce the concepts presented in the text of the
     prceding chapters and to get you actively involved in the learning
     process.

   To get the most out of the book, you should take the time to complete
each lab.  As well, talk a look at the Advanced Topics sections.

   For the later labs, custom Git repositories with example content are
provided for the user at <http://hithub.com/professional-git>.  In
addition, downlable copies of the code for the hooks from the last
chapter are availabe in <http://github.com/professional-git/hooks>.


File: prof_git.info,  Node: What Is Git,  Next: Key Concepts,  Prev: Introduction,  Up: Top

1 What Is Git
*************

Chapter Goals
=============

   • A brief introduction to Git and its history
   • The different ways to find and access Git
   • Types of applications that incorporate Git
   • The advantages of using Git
   • The challenges of using Git


File: prof_git.info,  Node: Key Concepts,  Next: The Git Promotion Model,  Prev: What Is Git,  Up: Top

2 Key Concepts
**************


File: prof_git.info,  Node: The Git Promotion Model,  Next: Configuration and Setup,  Prev: Key Concepts,  Up: Top

3 The Git Promotion Model
*************************


File: prof_git.info,  Node: Configuration and Setup,  Next: Getting Productive,  Prev: The Git Promotion Model,  Up: Top

4 Configuration and Setup
*************************


File: prof_git.info,  Node: Getting Productive,  Next: Tracking Changes,  Prev: Configuration and Setup,  Up: Top

5 Getting Productive
********************


File: prof_git.info,  Node: Tracking Changes,  Next: Working With Changes Over Time and Using Tags,  Prev: Getting Productive,  Up: Top

6 Tracking Changes
******************


File: prof_git.info,  Node: Working With Changes Over Time and Using Tags,  Next: Working With Local Branches,  Prev: Tracking Changes,  Up: Top

7 Working With Changes Over Time and Using Tags
***********************************************


File: prof_git.info,  Node: Working With Local Branches,  Next: Merging Content,  Prev: Working With Changes Over Time and Using Tags,  Up: Top

8 Working With Local Branches
*****************************


File: prof_git.info,  Node: Merging Content,  Next: Supporting Files in Git,  Prev: Working With Local Branches,  Up: Top

9 Merging Content
*****************


File: prof_git.info,  Node: Supporting Files in Git,  Next: Doing More With Git,  Prev: Merging Content,  Up: Top

10 Supporting Files in Git
**************************


File: prof_git.info,  Node: Doing More With Git,  Next: Understanding Remotes---Branches andc Operations,  Prev: Supporting Files in Git,  Up: Top

11 Doing More With Git
**********************


File: prof_git.info,  Node: Understanding Remotes---Branches andc Operations,  Next: Understanding Remotes---Workflows for Changes,  Prev: Doing More With Git,  Up: Top

12 Understanding Remotes—Branches andc Operations
*************************************************


File: prof_git.info,  Node: Understanding Remotes---Workflows for Changes,  Next: Working With Trees and Modules in Git,  Prev: Understanding Remotes---Branches andc Operations,  Up: Top

13 Understanding Remotes—Workflows for Changes
**********************************************


File: prof_git.info,  Node: Working With Trees and Modules in Git,  Next: Extending Git Functionality With Git Hooks,  Prev: Understanding Remotes---Workflows for Changes,  Up: Top

14 Working With Trees and Modules in Git
****************************************


File: prof_git.info,  Node: Extending Git Functionality With Git Hooks,  Next: Index,  Prev: Working With Trees and Modules in Git,  Up: Top

15 Extending Git Functionality With Git Hooks
*********************************************


File: prof_git.info,  Node: Index,  Prev: Extending Git Functionality With Git Hooks,  Up: Top

Index
*****



Tag Table:
Node: Top312
Node: Introduction1218
Node: How This Book is Unique1786
Node: Target Audience3287
Node: Structure and Content4275
Node: Reader Value5379
Node: What Is Git6473
Node: Key Concepts6847
Node: The Git Promotion Model6984
Node: Configuration and Setup7155
Node: Getting Productive7332
Node: Tracking Changes7492
Node: Working With Changes Over Time and Using Tags7670
Node: Working With Local Branches7915
Node: Merging Content8123
Node: Supporting Files in Git8285
Node: Doing More With Git8457
Node: Understanding Remotes---Branches andc Operations8654
Node: Understanding Remotes---Workflows for Changes8929
Node: Working With Trees and Modules in Git9216
Node: Extending Git Functionality With Git Hooks9483
Node: Index9720

End Tag Table


Local Variables:
coding: utf-8
End:
